//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: James (Dev Agent)
// Created: 2025-09-04
// AddInternalNoteCommand: Command for adding internal notes to issues
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings

using FluentValidation;
using MediatR;
using CleanArchitecture.Blazor.Application.Common.Interfaces;
using CleanArchitecture.Blazor.Application.Common.Models;
using CleanArchitecture.Blazor.Application.Features.Issues.Caching;
using CleanArchitecture.Blazor.Application.Features.Issues.DTOs;

namespace CleanArchitecture.Blazor.Application.Features.Issues.Commands.AddInternalNote;

public class AddInternalNoteCommand : ICacheInvalidatorRequest<Result<InternalNoteDto>>
{
    public required Guid IssueId { get; set; }
    public required string Content { get; set; } = default!;
    
    public IEnumerable<string>? Tags => IssueCacheKey.Tags;
}

public class AddInternalNoteCommandValidator : AbstractValidator<AddInternalNoteCommand>
{
    public AddInternalNoteCommandValidator()
    {
        RuleFor(x => x.IssueId)
            .NotEmpty()
            .WithMessage("Issue ID is required.");
            
        RuleFor(x => x.Content)
            .NotEmpty()
            .WithMessage("Note content is required.")
            .MaximumLength(2000)
            .WithMessage("Note content cannot exceed 2000 characters.");
    }
}