//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-01-15
// UpdateIssueCommandValidator: validates UpdateIssueCommand properties.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings

using FluentValidation;
using CleanArchitecture.Blazor.Application.Common.Interfaces;

namespace CleanArchitecture.Blazor.Application.Features.Issues.Commands.Update;

public class UpdateIssueCommandValidator : AbstractValidator<UpdateIssueCommand>
{
    private readonly IApplicationDbContextFactory _dbContextFactory;

    public UpdateIssueCommandValidator(IApplicationDbContextFactory dbContextFactory)
    {
        _dbContextFactory = dbContextFactory;
        
        RuleFor(v => v.Id)
            .NotEmpty()
            .WithMessage("Id is required.");
            
        RuleFor(v => v.Title)
            .NotEmpty()
            .MaximumLength(200)
            .WithMessage("Title is required and must not exceed 200 characters.");
            
        RuleFor(v => v.Description)
            .NotEmpty()
            .MaximumLength(2000)
            .WithMessage("Description is required and must not exceed 2000 characters.");
            
        RuleFor(v => v.Category)
            .IsInEnum()
            .WithMessage("Category must be a valid value.");
            
        RuleFor(v => v.Priority)
            .IsInEnum()
            .WithMessage("Priority must be a valid value.");
            
        RuleFor(v => v.Status)
            .IsInEnum()
            .WithMessage("Status must be a valid value.");
    }
}