//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-04
// IssueListDto: transfers issue list data for dashboard display.
// Docs: https://docs.cleanarchitectureblazor.com/features/issues
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings

using System.ComponentModel;
using AutoMapper;
using CleanArchitecture.Blazor.Domain.Entities;
using CleanArchitecture.Blazor.Domain.Enums;
using CleanArchitecture.Blazor.Domain.Identity;

namespace CleanArchitecture.Blazor.Application.Features.Issues.DTOs;

[Description("Issues")]
public class IssueListDto
{
    [Description("Id")]
    public Guid Id { get; set; }
    
    [Description("Reference Number")]
    public string ReferenceNumber { get; set; } = default!;
    
    [Description("Title")]
    public string Title { get; set; } = default!;
    
    [Description("Description")]
    public string Description { get; set; } = default!;
    
    [Description("Category")]
    public IssueCategory Category { get; set; }
    
    [Description("Priority")]
    public IssuePriority Priority { get; set; }
    
    [Description("Status")]
    public IssueStatus Status { get; set; }
    
    [Description("Created Date")]
    public DateTime? Created { get; set; }
    
    [Description("Last Modified Date")]
    public DateTime? LastModified { get; set; }
    
    // Reporter Contact Information
    [Description("Reporter Contact Id")]
    public int? ReporterContactId { get; set; }
    
    [Description("Reporter Name")]
    public string? ReporterName { get; set; }
    
    [Description("Reporter Phone")]
    public string? ReporterPhone { get; set; }
    
    // Assignment Information (future enhancement)
    [Description("Assigned User Name")]
    public string? AssignedUserName { get; set; }
    
    // Additional Display Fields
    [Description("Channel")]
    public string? Channel { get; set; }
    
    [Description("Product")]
    public string? Product { get; set; }
    
    // JIRA Integration
    [Description("JIRA Key")]
    public string? JiraKey { get; set; }
    
    [Description("JIRA URL")]
    public string? JiraUrl { get; set; }

    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<Issue, IssueListDto>(MemberList.None)
                .ForMember(dest => dest.ReporterName, opt => opt.MapFrom(src => 
                    src.ReporterContact != null ? src.ReporterContact.Name : src.ReporterName))
                .ForMember(dest => dest.ReporterPhone, opt => opt.MapFrom(src => 
                    src.ReporterContact != null ? src.ReporterContact.PhoneNumber : src.ReporterPhone))
                .ForMember(dest => dest.AssignedUserName, opt => opt.Ignore()); // Future enhancement
        }
    }
}