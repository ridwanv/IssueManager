@using Microsoft.AspNetCore.Components.Web
@using MudBlazor
@inherits ErrorBoundaryBase
@inject ILogger<ErrorBoundary> Logger
@inject IStringLocalizer<SharedResource> L

@if (CurrentException is null)
{
    @ChildContent
}
else
{
    <div style="display: flex; justify-content: center; align-items: center; min-height: 60vh; padding: 2rem;">
        <MudPaper Class="pa-8" Elevation="2" Style="max-width: 800px; text-align: center;">
            <MudIcon Icon="@Icons.Material.Filled.ErrorOutline" 
                     Style="font-size: 4rem; color: #f44336;" 
                     Class="mb-4" />
            
            <MudText Typo="Typo.h4" Color="Color.Error" Class="mb-4">
                Component Error
            </MudText>
            
            <MudText Typo="Typo.body1" Class="mb-4">
                An error occurred while rendering this component.
            </MudText>

            @if (IsDevelopment)
            {
                <MudExpansionPanels Class="mb-4">
                    <MudExpansionPanel Text="Error Details (Development Mode)">
                        <MudAlert Severity="Severity.Error" Class="mb-4">
                            <MudText Typo="Typo.subtitle2" Class="mb-2">
                                @CurrentException.GetType().Name
                            </MudText>
                            <MudText Typo="Typo.body2" Class="mb-2">
                                @CurrentException.Message
                            </MudText>
                            @if (!string.IsNullOrEmpty(CurrentException.StackTrace))
                            {
                                <MudText Typo="Typo.caption" Style="font-family: monospace; white-space: pre-wrap; font-size: 0.75rem;">
                                    @CurrentException.StackTrace
                                </MudText>
                            }
                        </MudAlert>
                    </MudExpansionPanel>
                </MudExpansionPanels>
            }
            else
            {
                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-4">
                    Please try refreshing the page or contact support if the problem persists.
                </MudText>
            }

            <MudDivider Class="my-4" />
            
            <MudStack Row Justify="Justify.Center" Spacing="2">
                <MudButton Variant="Variant.Filled" 
                          Color="Color.Primary" 
                          StartIcon="@Icons.Material.Filled.Refresh"
                          OnClick="Recover">
                    Try Again
                </MudButton>
                
                <MudButton Variant="Variant.Outlined" 
                          Color="Color.Secondary" 
                          StartIcon="@Icons.Material.Filled.Home"
                          Href="/">
                    Go Home
                </MudButton>
            </MudStack>
        </MudPaper>
    </div>
}

@code {
    [Inject] private IWebHostEnvironment Environment { get; set; } = default!;
    
    private bool IsDevelopment => Environment.IsDevelopment();
    
    protected override Task OnErrorAsync(Exception exception)
    {
        Logger.LogError(exception, "An error occurred in component: {ComponentType}", GetType().Name);
        return Task.CompletedTask;
    }
}
