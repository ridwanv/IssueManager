    private string GetNotificationIcon()
    {
        if (_notificationCount == 0)
            return Icons.Material.Filled.Notifications;
        return _hasUnacknowledged ? Icons.Material.Filled.NotificationImportant : Icons.Material.Filled.Notifications;
    }

    private Color GetIconColor()
    {
        if (_notificationCount == 0)
            return Color.Default;
        return _hasUnacknowledged ? Color.Warning : Color.Primary;
    }

    private string GetTooltipText()
    {
        if (_notificationCount == 0)
            return "No new notifications";
        var conversations = _notificationCount == 1 ? "conversation" : "conversations";
        return $"{_notificationCount} active {conversations}";
    }

    private string GetConversationTitle(ConversationNotification conversation)
    {
        if (conversation.ConversationId.Length > 10)
            return $"Chat {conversation.ConversationId.Substring(0, 8)}...";
        return $"Conversation {conversation.ConversationId}";
    }

    private string GetConversationIcon(ConversationNotification conversation)
    {
        if (conversation.UnreadCount > 5)
            return Icons.Material.Filled.PriorityHigh;
        if (conversation.UnreadCount > 1)
            return Icons.Material.Filled.Chat;
        return Icons.Material.Filled.ChatBubbleOutline;
    }

    private Color GetConversationAvatarColor(ConversationNotification conversation)
    {
        if (conversation.UnreadCount > 5)
            return Color.Error;
        if (conversation.UnreadCount > 1)
            return Color.Warning;
        return Color.Primary;
    }

    private string GetTimeAgo(DateTime timestamp)
    {
        var timeSpan = DateTime.Now - timestamp;
        
        if (timeSpan.TotalMinutes < 1)
            return "now";
        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes}m";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours}h";
        if (timeSpan.TotalDays < 7)
            return $"{(int)timeSpan.TotalDays}d";
        
        return timestamp.ToString("MM/dd");
    }

    private string GetTruncatedMessage(string message)
    {
        if (string.IsNullOrEmpty(message))
            return "No message preview";
        
        const int maxLength = 60;
        if (message.Length <= maxLength)
            return message;
        
        return message.Substring(0, maxLength - 3) + "...";
    }