name: Deploy Server.UI to Azure Web App

on:
  push:
    branches: [ main, 0.0.1 ]
    paths:
      - 'src/Server.UI/**'
      - 'src/Application/**'
      - 'src/Domain/**'
      - 'src/Infrastructure/**'
      - 'src/IssueManager.Shared/**'
      - 'src/Migrators/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: '9.0.x'
  AZURE_WEBAPP_PACKAGE_PATH: './publish'
  AZURE_WEBAPP_NAME: 'issuemanager'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore IssueManager.slnx
      
    - name: Build application
      run: dotnet build src/Server.UI/IssueManager.UI.csproj --configuration Release --no-restore
      
    - name: Publish application
      run: dotnet publish src/Server.UI/IssueManager.UI.csproj --configuration Release --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} --no-build
      
    - name: Install EF Core tools
      run: dotnet tool install --global dotnet-ef --version 9.0.0
      
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Run Database Migrations
      run: |
        dotnet ef database update --project src/Migrators/Migrators.MSSQL --startup-project src/Server.UI --connection "${{ secrets.AZURE_SQL_CONNECTION_STRING }}" --verbose
      env:
        ASPNETCORE_ENVIRONMENT: Production
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
    - name: Logout from Azure
      run: az logout
      if: always()